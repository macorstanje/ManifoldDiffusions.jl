var documenterSearchIndex = {"docs":
[{"location":"library/#Library-1","page":"Library","title":"Library","text":"","category":"section"},{"location":"library/#Various-manifolds-and-basic-functions-1","page":"Library","title":"Various manifolds and basic functions","text":"","category":"section"},{"location":"library/#","page":"Library","title":"Library","text":"Manifold\nEmbeddedManifold\nTangentVector\nEllipse\nSphere\nTorus\nParaboloid\ng\nŒì","category":"page"},{"location":"library/#Main.Manifolds.Manifold","page":"Library","title":"Main.Manifolds.Manifold","text":"Manifold\n\nAbstract (super-)type under which all speficic manifolds fall\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.EmbeddedManifold","page":"Library","title":"Main.Manifolds.EmbeddedManifold","text":"EmbeddedManifold <: Manifold\n\nEmbeddedManifold creates a manifold ‚Ñ≥ = f^{-1}({0}) of dimension d=N-n where f should be a smooth function ‚Ñù^N  ‚Ñù^n. An EmbeddedManifold ‚Ñ≥ equipped with functions f( , ‚Ñ≥), P( , ‚Ñ≥) and F( , ‚Ñ≥). Here f is such that f(q, ‚Ñ≥)=0 when q‚Ñ≥, P(q, ‚Ñ≥) is the projection matrix ‚Ñù^NT_q‚Ñ≥ given by I-n(q)n(q)^T, where n(q)=f(q)f(q). F(q, ‚Ñ≥) is the transformation from local coordinates q to global coordinates in ‚Ñù^N.\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.TangentVector","page":"Library","title":"Main.Manifolds.TangentVector","text":"TangentVector{T, TM}\n\nElements of ùëá‚Çì‚Ñ≥ and some vector-space operations.\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.Ellipse","page":"Library","title":"Main.Manifolds.Ellipse","text":"Ellipse{T<:Real} <: EmbeddedManifold\n\nSettings for an ellipse as subset of ‚Ñù¬≤. Elements satisfy (xa)^2 + (yb)^2 = 1. For an object ùîº = Ellipse(a, b), we have\n\nf(q mathcalùîº) = left(fracq_1aright)^2 + left(fracq_2bright)^2 - 1\nF(q ùîº) = beginpmatrix acos q  b sin qendpmatrix\n\nExample: Generate a unit circle\n\njulia> ùîº = Ellipse(1.0, 1.0)\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.Sphere","page":"Library","title":"Main.Manifolds.Sphere","text":"Sphere{T<:Real} <: EmbeddedManifold\n\nSettings for the sphere ùïä¬≤. Call Sphere(R) to generate a sphere with radius R<:Real. Elements satisfy x^2+y^2+z^2=R^2. The local coordinates are modelled via a stereograpgical projection.\n\nFor a Sphere ùïä = Sphere(R), we have\n\nf(q ùïä) = q_1^2+q_2^2-R^2\nF(q ùïä) = beginpmatrix frac2q_1q_1^2+q_2^2+1  frac2q_2q_1^2+q_2^2+1  fracq_1^2+q_2^2-1q_1^2+q_2^2+1 endpmatrix\n\nExample: Generate a unit sphere\n\njulia> ùïä = Sphere(1.0)\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.Torus","page":"Library","title":"Main.Manifolds.Torus","text":"Torus{T<:Real} <: EmbeddedManifold\n\nSettings for the torus ùïã¬≤ with inner radius r and outer radius R. Call Torus(R,r) to generate a torus with inner radius r<:Real and outer radius R<:Real. Elements satisfy (x^2+y^2+z^2+R^2-r^2)^2=4R^2(x^2+y^2).\n\nFor a Torus ùïã = Torus(R, r), we have\n\n``f(q, ùïã) =\n\nExample: Generate a torus with R=3 and r=1\n\njulia> ùïã = Torus(3.0, 1.0)\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.Paraboloid","page":"Library","title":"Main.Manifolds.Paraboloid","text":"Paraboloid{T<:Real} <: EmbeddedManifold\n\nSettings for the Paraboloid. Call Paraboloid(a,b) to generate a paraboloid with parameters a<:Real and outer radius b<:Real. Elements satisfy (xa)^2+(yb)^2 = z.\n\nExample: Generate a torus with a=0 and b=1\n\njulia> ‚Ñô = Parabolod(3.0, 1.0)\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.g","page":"Library","title":"Main.Manifolds.g","text":"g(q::T, ‚Ñ≥::TM) where {T<:Union{AbstractArray, Real}, TM<:EmbeddedManifold}\n\nIf ‚Ñ≥<:EmbeddedManifold is given in local coordinates F‚Ñù^d  ‚Ñù^N, we obtain a Riemannian metric. g(q, ‚Ñ≥) returns the matrix mathrmdF^TmathrmdF, where mathrmdF denotes the Jacobian matrix for F in q<:Union{AbstractArray, Real}.\n\n\n\n\n\n","category":"function"},{"location":"library/#Main.Manifolds.Œì","page":"Library","title":"Main.Manifolds.Œì","text":"Œì(q::T, ‚Ñ≥::TM) where {T<:Union{AbstractArray, Real}, TM<:EmbeddedManifold}\n\nIf ‚Ñ≥<:EmbeddedManifold is given in local coordinates F‚Ñù^d  ‚Ñù^N, we obtain Christoffel symbols Œì^i_jk for the Levi-Civita connection\n\nIn local coordinates q, Œì(q, ‚Ñ≥) returns a matrix of size ddd where the element [i,j,k] corresponds to Œì^i_jk.\n\n\n\n\n\n","category":"function"},{"location":"library/#Geodesics-1","page":"Library","title":"Geodesics","text":"","category":"section"},{"location":"library/#","page":"Library","title":"Library","text":"Geodesic\nExponentialMap\nParallelTransport","category":"page"},{"location":"library/#Main.Manifolds.Geodesic","page":"Library","title":"Main.Manifolds.Geodesic","text":"Geodesic(x‚ÇÄ::Tx, v‚ÇÄ::Tv, tt, ‚Ñ≥::TM) where {Tx, Tv <: AbstractArray, TM<:EmbeddedManifold}\n\nReturns the values of the geodesic on ‚Ñ≥ starting at x‚ÇÄ with initial velicity v‚ÇÄ on a discretized time interval tt. All input is in local coordinates.\n\n\n\n\n\n","category":"function"},{"location":"library/#Main.Manifolds.ExponentialMap","page":"Library","title":"Main.Manifolds.ExponentialMap","text":"ExponentialMap(x‚ÇÄ::Tx, v‚ÇÄ::Tv, ‚Ñ≥::TM) where {Tx, Tv <: AbstractArray, TM<:EmbeddedManifold}\n\nReturns as new element of ‚Ñ≥ that results from Exp_x_0v_0, where the point x‚ÇÄ on ‚Ñ≥ and initial velocity v‚ÇÄ are given in local coordinates.\n\n\n\n\n\n","category":"function"},{"location":"library/#Main.Manifolds.ParallelTransport","page":"Library","title":"Main.Manifolds.ParallelTransport","text":"ParallelTransport(Œ≥, Œ≥Ãá, V‚ÇÄ, tt, ‚Ñ≥)\n\nreturns the parallel transport of an initial  vector V‚ÇÄ, tangent to ‚Ñ≥ at Œ≥(0), along a curve Œ≥. It is assumed Œ≥ and Œ≥Ãá are known on a discretized time interval tt\n\n\n\n\n\n","category":"function"},{"location":"library/#Frames-and-the-Frame-bundle-1","page":"Library","title":"Frames and the Frame bundle","text":"","category":"section"},{"location":"library/#","page":"Library","title":"Library","text":"Frame\nTangentFrame\nŒ†\nŒ†À£\nHor","category":"page"},{"location":"library/#Main.Manifolds.Frame","page":"Library","title":"Main.Manifolds.Frame","text":"Frame{Tx, TŒΩ, TM}\n\nElements of mathrmF(‚Ñ≥) consist of a position x::Tx on ‚Ñ≥<:EmbeddedManifold and a mathrmGL(d ‚Ñù)-matrix ŒΩ::TŒΩ that consists of column vectors that form a basis for T_x‚Ñ≥. All input is assumed to be in local coordinates that coincide with F( ,‚Ñ≥).\n\nExample: A frame on the south pole on the sphere\n\njulia> ùïä = Sphere(1.0)\njulia> u = Frame([0. , 0.], [1. 0. ; 0.  1.], ùïä)\njulia> u.x # returns [0. , 0.]\njulia> u.ŒΩ # returns [1. 0. ; 0. 1.]\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.TangentFrame","page":"Library","title":"Main.Manifolds.TangentFrame","text":"TangentFrame{Tx, TŒΩ}\n\nA tangent vector (x ŒΩ)  T_umathrmF(‚Ñ≥). This object consists of the frame u::Frame that it is tangent to and the velocities xÃá and ŒΩÃá.\n\nExample:\n\njulia> ùïä = Sphere(1.0)\njulia> u = Frame([0. , 0.], [1. 0. ; 0.  1.], ùïä)\njulia> V = TangentFrame(u, [1. 0.] , [-0.1 0. ; -0.5 1.])\n\n\n\n\n\n","category":"type"},{"location":"library/#Main.Manifolds.Œ†","page":"Library","title":"Main.Manifolds.Œ†","text":"Œ†(u::Frame)\n\nCanonical projection Œ† mathrmF(‚Ñ≥)  ‚Ñ≥ that maps (xŒΩ) to x.\n\n\n\n\n\n","category":"function"},{"location":"library/#Main.Manifolds.Œ†À£","page":"Library","title":"Main.Manifolds.Œ†À£","text":"Œ†À£(X::TangentFrame)\n\nPushforward map of the canonocal projection Œ†^* TmathrmF(‚Ñ≥)  T‚Ñ≥ that maps (x ŒΩ) to x\n\n\n\n\n\n","category":"function"},{"location":"library/#Main.Manifolds.Hor","page":"Library","title":"Main.Manifolds.Hor","text":"Hor(i::Int64, u::Frame, ‚Ñ≥::TM) where {TM<:EmbeddedManifold}\n\nReturns the horizontal vector H_i(u) in T_umathrmF(‚Ñ≥) as an element of type TangentFrame.\n\n\n\n\n\n","category":"function"},{"location":"manual/#Manual-1","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Pending","category":"page"},{"location":"#Documentation-for-Manifolds.jl-1","page":"Home","title":"Documentation for Manifolds.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Homepage","category":"page"}]
}
